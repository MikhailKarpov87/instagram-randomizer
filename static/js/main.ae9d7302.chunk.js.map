{"version":3,"sources":["constants.js","reducers/index.js","reducers/reducer_input.js","reducers/reducer_profiles.js","reducers/reducer_winners.js","reducers/reducer_removed_items.js","reducers/reducer_loading.js","reducers/reducer_picking.js","reducers/reducer_error.js","reducers/reducer_settings.js","lang.js","components/spinner.js","helpers.js","actions/index.js","components/main_page/pick_settings.js","components/main_page/input_hint.js","components/main_page/input_form.js","components/main_page/profile.js","components/main_page/profiles_list.js","components/header.js","components/footer.js","components/main_page/language_switch.js","components/main_page.js","App.js","index.js"],"names":["BASE_URL","UNKNOWN_PIC_URL","FETCHING_DATA","FETCHING_DATA_SUCCESS","UPDATE_INPUT","START_PICKING","REMOVE_RANDOM_ITEM","FINISH_PICKING","REMOVE_ALL","CHANGE_LANGUAGE","UPDATE_WINNERS_NUM","profilePicMatchTexts","rootReducer","combineReducers","input","state","arguments","length","undefined","action","type","payload","profiles","result","data","concat","Object","toConsumableArray","_action$payload","removedProfiles","filter","profile","id","includes","winners","map","value","name","removedItems","loading","_action$payload$progr","progress","total","done","picking","error","winnersNum","profilesNum","settings","resultWinnersNum","objectSpread","lang","localization","ru","inputListPlaceholder","howToAdd","load","loaded","clear","pickNumOfProfiles","start","loadingError","wrongNumError","winner","en","Spinner","props","isActive","react_default","a","createElement","className","calculateRemovingSpeed","itemsNum","getProfileImageURL","page","img","DOMParser","parseFromString","querySelector","content","filterInput","resultInput","lines","split","filteredInput","some","_loop","_id","push","join","timeout","ms","Promise","resolve","setTimeout","getDataSuccess","PickSettings","_this$props","this","updateWinnersNum","validateWinnersNum","startPicking","removeSpeed","role","htmlFor","onChange","e","currentTarget","onBlur","disabled","onClick","spinner","Component","connect","time","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","i","randomId","wrap","_context","prev","next","Math","floor","random","stop","_x","apply","InputHint","label","hintContent","InputForm","removeAll","handleInput","fetchProfilesImages","input_hint","src","alt","width","event","rows","placeholder","pick_settings","profileNames","getState","profileNamesArray","line","axios","get","then","img_url","catch","Profile","removed","removingTime","animationStyle","style","animation","href","target","rel","ProfilesList","columnsNum","winnersText","gridTemplateColumns","main_page_profile","key","PureComponent","Header","Footer","LanguageSwitch","changeLanguage","keys","backgroundImage","renderFlags","MainPage","language_switch","header","input_form","profiles_list","footer","initialState","myStore","composeWithDevTools","applyMiddleware","thunk","createStore","App","es","store","reducers","main_page","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae9d7302.chunk.js","sourcesContent":["//  Base url for http requests\nexport const BASE_URL = \"https://www.instagram.com\";\n\n//  URL for dummy unknown image\nexport const UNKNOWN_PIC_URL = \"/images/notfound_pic.jpg\";\n\n//  Actions names\nexport const FETCHING_DATA = \"FETCHING_DATA\";\nexport const FETCHING_DATA_SUCCESS = \"FETCHING_DATA_SUCCESS\";\nexport const UPDATE_INPUT = \"UPDATE_INPUT\";\nexport const START_PICKING = \"START_PICKING\";\nexport const REMOVE_RANDOM_ITEM = \"REMOVE_RANDOM_ITEM\";\nexport const FINISH_PICKING = \"FINISH_PICKING\";\nexport const REMOVE_ALL = \"REMOVE_ALL\";\nexport const CHANGE_LANGUAGE = \"CHANGE_LANGUAGE\";\nexport const UPDATE_WINNERS_NUM = \"UPDATE_WINNERS_NUM\";\n\n//  Name of profile pic element on different languages for profiles list copy-paste feature\n//  Needed for filterInput function to match and filter profiles names in input text\nexport const profilePicMatchTexts = [\n  \"Фото профиля\",\n  \"profile picture\",\n  \"Foto del perfil\",\n  \"Profilbild\",\n  \"Photo de profil\"\n];\n","import { combineReducers } from \"redux\";\n\nimport profiles from \"./reducer_profiles\";\nimport input from \"./reducer_input\";\nimport loading from \"./reducer_loading\";\nimport settings from \"./reducer_settings\";\nimport error from \"./reducer_error\";\nimport picking from \"./reducer_picking\";\nimport removedItems from \"./reducer_removed_items\";\nimport winners from \"./reducer_winners\";\n\nconst rootReducer = combineReducers({\n  input,\n  profiles,\n  winners,\n  removedItems,\n  loading,\n  picking,\n  error,\n  settings\n});\n\nexport default rootReducer;\n","import { UPDATE_INPUT } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_INPUT:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA, FETCHING_DATA_SUCCESS, FINISH_PICKING, REMOVE_ALL } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCHING_DATA_SUCCESS:\n      const result = action.payload.data;\n      return [...state, result];\n\n    case FINISH_PICKING:\n      const { profiles, removedProfiles } = action.payload;\n      //  When picking is finished\n      //  Returning new array which doesn't contain removed profiles\n      const profilesResult = profiles.filter((profile, id) => !removedProfiles.includes(id));\n      return profilesResult;\n\n    case FETCHING_DATA:\n    case REMOVE_ALL:\n      return [];\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA, FINISH_PICKING, REMOVE_ALL } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FINISH_PICKING:\n      const { profiles, removedProfiles } = action.payload;\n      const winners = profiles.filter((profile, id) => !removedProfiles.includes(id));\n      const result = winners.map(value => value.name);\n      return result;\n\n    case REMOVE_ALL:\n    case FETCHING_DATA:\n      return [];\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA, REMOVE_RANDOM_ITEM, FINISH_PICKING } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case REMOVE_RANDOM_ITEM:\n      return [...state, action.payload];\n\n    case FETCHING_DATA:\n    case FINISH_PICKING:\n      return [];\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA, FETCHING_DATA_SUCCESS } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCHING_DATA:\n      return true;\n\n    case FETCHING_DATA_SUCCESS:\n      const { total, done } = action.payload.progress;\n      return done !== total;\n\n    default:\n      return state;\n  }\n}\n","import { START_PICKING, FINISH_PICKING } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case START_PICKING:\n      return true;\n\n    case FINISH_PICKING:\n      return false;\n\n    default:\n      return state;\n  }\n}\n","import { UPDATE_WINNERS_NUM } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_WINNERS_NUM:\n      const { winnersNum, profilesNum } = action.payload;\n      //  Throw 'wrongNumError' error if number of winnersNum is more than profiles number or less than 1\n      return winnersNum < 1 || winnersNum >= profilesNum ? \"wrongNumError\" : false;\n\n    default:\n      return state;\n  }\n}\n","import { CHANGE_LANGUAGE, UPDATE_WINNERS_NUM } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_WINNERS_NUM:\n      const { winnersNum, profilesNum } = action.payload;\n      //  If winnersNum < 1 or > profilesNum, set winnersNum = 1 to avoid input error\n      const resultWinnersNum = winnersNum < 1 || winnersNum >= profilesNum ? 1 : winnersNum;\n      return { ...state, winnersNum: +resultWinnersNum };\n\n    case CHANGE_LANGUAGE:\n      return { ...state, lang: action.payload };\n\n    default:\n      return state;\n  }\n}\n","//  Interface Localization\n//  RU, EN\n\nconst localization = {\n  ru: {\n    inputListPlaceholder: \"Добавьте список Instagram профилей\",\n    howToAdd: \"Как добавить список профилей\",\n    load: \"Загрузить\",\n    loading: \"Загрузка... \",\n    loaded: \"Загружено: \",\n    clear: \"Очистить\",\n    pickNumOfProfiles: \"Отобрать профилей:\",\n    picking: \"Выбираем... \",\n    start: \"Старт!\",\n    loadingError: \"Возникла ошибка при загрузке результатов. Попробуйте еще раз.\",\n    wrongNumError: \"Число должно быть больше нуля и меньше числа профилей\",\n    winner: \"Победитель:\",\n    winners: \"Победители:\"\n  },\n\n  en: {\n    inputListPlaceholder: \"Add list of Instagram profiles here\",\n    howToAdd: \"How to add profiles list\",\n    load: \"Load\",\n    loading: \"Loading... \",\n    loaded: \"Loaded: \",\n    clear: \"Clear\",\n    pickNumOfProfiles: \"Pick profiles:\",\n    picking: \"Picking... \",\n    start: \"Start!\",\n    loadingError: \"Error occured while loading results. Please try again.\",\n    wrongNumError: \"Number must be greater than zero and less than profiles num\",\n    winner: \"The winner is:\",\n    winners: \"Winners are:\"\n  }\n};\n\nexport default localization;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Spinner = props => {\n  const { isActive } = props;\n  return isActive && <i className=\"fab fa-instagram spinner\" />;\n};\n\nSpinner.propTypes = {\n  isActive: PropTypes.bool.isRequired\n};\n\nexport default Spinner;\n","import { profilePicMatchTexts } from \"./constants\";\n\n//  Calculating remove animations speed based on number of items\nexport const calculateRemovingSpeed = itemsNum => {\n  if (itemsNum < 10) return 700;\n  if (itemsNum >= 10 && itemsNum < 30) return 400;\n  if (itemsNum >= 30 && itemsNum < 100) return 250;\n  if (itemsNum >= 100) return 100;\n};\n\n// Gettings profile image URL from instagram web page with DOMParser\nexport const getProfileImageURL = page => {\n  const doc = new DOMParser().parseFromString(page, \"text/html\");\n  const img = doc.querySelector(\"meta[property='og:image']\").content;\n  return img ? img : false;\n};\n\n//  Function for filtering input\nexport const filterInput = input => {\n  const lines = input.split(\"\\n\");\n  let filteredInput = [];\n  let resultInput;\n  //  Searching for element with profile name\n  if (profilePicMatchTexts.some(value => input.includes(value))) {\n    for (let id in lines) {\n      //  Check for first row - in case if profilepic element was not selected\n      if (\n        id < 2 &&\n        profilePicMatchTexts.some(value => lines[id].includes(value)) &&\n        lines[id - 2]\n      ) {\n        filteredInput.push(lines[id - 2]);\n      }\n\n      //  If current element is profilepic and next element is existing -\n      //  this means it's a profile pic element. Adding it to results\n      profilePicMatchTexts.some(value => lines[id].includes(value)) &&\n        lines[id++] &&\n        !!lines[id] &&\n        filteredInput.push(lines[id]);\n    }\n\n    resultInput = filteredInput.join(\"\\n\");\n  } else {\n    resultInput = input;\n  }\n  return resultInput;\n};\n\n//  Timeout function\nexport const timeout = ms => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n","import axios from \"axios\";\nimport {\n  FETCHING_DATA,\n  FETCHING_DATA_SUCCESS,\n  UPDATE_INPUT,\n  START_PICKING,\n  REMOVE_RANDOM_ITEM,\n  FINISH_PICKING,\n  REMOVE_ALL,\n  CHANGE_LANGUAGE,\n  UPDATE_WINNERS_NUM,\n  BASE_URL,\n  UNKNOWN_PIC_URL\n} from \"../constants\";\nimport { getProfileImageURL, timeout, filterInput } from \"../helpers\";\n\nexport function handleInput(input) {\n  //  Filtering textarea input with helper function\n  const resultInput = filterInput(input);\n  return { type: UPDATE_INPUT, payload: resultInput };\n}\n\nexport function fetchProfilesImages(profileNames) {\n  return (dispatch, getState) => {\n    dispatch(getData());\n    const profileNamesArray = profileNames.split(\"\\n\").filter(line => !!line);\n    const profilesNum = profileNamesArray.length;\n    for (let id in profileNamesArray) {\n      axios\n        .get(`${BASE_URL}/${profileNamesArray[id]}/`)\n        .then(data => {\n          const { profiles } = getState();\n          const img_url = getProfileImageURL(data.data) || UNKNOWN_PIC_URL;\n          dispatch(\n            getDataSuccess({\n              data: { name: profileNamesArray[id], img: img_url },\n              progress: { done: profiles.length + 1, total: profilesNum }\n            })\n          );\n        })\n        .catch(error => {\n          const { profiles } = getState();\n          //  If profile image fetching was not successful for some reason(network issue, wrong profile name, etc):\n          //  then return UNKNOWN_IMG_URL instead\n          dispatch(\n            getDataSuccess({\n              data: { name: profileNamesArray[id], img: UNKNOWN_PIC_URL },\n              progress: { done: profiles.length + 1, total: profilesNum }\n            })\n          );\n        });\n    }\n  };\n}\n\n//  Loading = true while performing request\nexport function getData() {\n  return { type: FETCHING_DATA };\n}\n\n//  Returning profile data when request is performed\nexport function getDataSuccess(data) {\n  return { type: FETCHING_DATA_SUCCESS, payload: data };\n}\n\nexport function startPicking(profiles, winnersNum, time) {\n  const total = profiles.length;\n  let removedProfiles = [];\n  return async dispatch => {\n    dispatch({ type: START_PICKING });\n\n    for (let i = total; i > winnersNum; i--) {\n      //  Generate random number to remove random profile\n      let randomId = Math.floor(Math.random() * total);\n\n      //  If random number is in array of deleted profiles - generate random number while it won't be in\n      while (removedProfiles.includes(randomId)) {\n        randomId = Math.floor(Math.random() * total);\n      }\n      removedProfiles.push(randomId);\n\n      dispatch({ type: REMOVE_RANDOM_ITEM, payload: randomId });\n      await timeout(time);\n    }\n    await timeout(400);\n    dispatch({ type: FINISH_PICKING, payload: { removedProfiles, profiles } });\n  };\n}\n\nexport function removeAll() {\n  return { type: REMOVE_ALL };\n}\n\nexport function changeLanguage(value) {\n  return { type: CHANGE_LANGUAGE, payload: value };\n}\n\nexport function updateWinnersNum(winnersNum) {\n  return { type: UPDATE_WINNERS_NUM, payload: { winnersNum } };\n}\n\nexport function validateWinnersNum(winnersNum, profilesNum) {\n  return { type: UPDATE_WINNERS_NUM, payload: { winnersNum, profilesNum } };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner\";\nimport localization from \"../../lang\";\nimport { updateWinnersNum, validateWinnersNum, startPicking } from \"../../actions\";\nimport { calculateRemovingSpeed } from \"../../helpers\";\n\nclass PickSettings extends Component {\n  render() {\n    const {\n      input,\n      profiles,\n      loading,\n      picking,\n      error,\n      settings,\n      updateWinnersNum,\n      validateWinnersNum,\n      startPicking\n    } = this.props;\n\n    //  Calculating remove animation speed based on number of profiles\n    const removeSpeed = calculateRemovingSpeed(profiles.length);\n\n    const lang = localization[settings.lang];\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {error && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {lang[error]}\n            </div>\n          )}\n\n          {!picking && (\n            <div>\n              <label htmlFor=\"winnersNum\">{lang.pickNumOfProfiles}</label>\n              <input\n                type=\"number\"\n                className=\"winners-num-input\"\n                value={settings.winnersNum}\n                onChange={e => updateWinnersNum(e.currentTarget.value)}\n                onBlur={e => validateWinnersNum(e.currentTarget.value, profiles.length)}\n              />\n            </div>\n          )}\n\n          <button\n            className={`btn btn-success btn-lg ${\n              !input || loading || picking || error ? \"btn-disabled\" : \"\"\n            }`}\n            disabled={!input || loading || picking || error}\n            onClick={() => startPicking(profiles, settings.winnersNum, removeSpeed)}\n          >\n            {picking ? lang.picking : lang.start}\n            <Spinner isActive={picking} />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nPickSettings.propTypes = {\n  input: PropTypes.string.isRequired,\n  profiles: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  picking: PropTypes.bool.isRequired,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  settings: PropTypes.shape({\n    lang: PropTypes.string.isRequired,\n    winnersNum: PropTypes.number.isRequired\n  }),\n  updateWinnersNum: PropTypes.func.isRequired,\n  validateWinnersNum: PropTypes.func.isRequired,\n  startPicking: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    input: state.input,\n    profiles: state.profiles,\n    loading: state.loading,\n    picking: state.picking,\n    error: state.error,\n    settings: state.settings\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { updateWinnersNum, validateWinnersNum, startPicking }\n)(PickSettings);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputHint = props => {\n  const { label, hintContent } = props;\n  return (\n    <div className=\"input-hint small text-muted\">\n      <i className=\"far fa-question-circle\" /> {label}\n      <span className=\"tooltiptext\">{hintContent}</span>\n    </div>\n  );\n};\n\nInputHint.propTypes = {\n  label: PropTypes.string.isRequired,\n  hintContent: PropTypes.object.isRequired\n};\n\nexport default InputHint;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport localization from \"../../lang\";\nimport Spinner from \"../spinner\";\nimport PickSettings from \"./pick_settings\";\nimport { fetchProfilesImages, handleInput, removeAll } from \"../../actions\";\nimport InputHint from \"./input_hint\";\n\nclass InputForm extends Component {\n  render() {\n    const {\n      input,\n      profiles,\n      winners,\n      loading,\n      removeAll,\n      settings,\n      handleInput,\n      fetchProfilesImages\n    } = this.props;\n    const lang = localization[settings.lang];\n\n    return (\n      <div className=\"container input-container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-4 input-column\">\n            <InputHint\n              label={lang.howToAdd}\n              hintContent={\n                <img src=\"images/how-to.gif\" alt=\"how to add profiles list\" width=\"320\" />\n              }\n            />\n            <textarea\n              className=\"form-control\"\n              onChange={event => handleInput(event.currentTarget.value)}\n              value={input}\n              rows={7}\n              placeholder={lang.inputListPlaceholder}\n            />\n          </div>\n          <div className=\"col-md-4 buttons input-column\">\n            <div className=\"button\">\n              <button\n                className={`btn btn-primary btn-fix ${!input || loading ? \"btn-disabled\" : \"\"}`}\n                onClick={event => fetchProfilesImages(input)}\n                disabled={!input || loading}\n              >\n                {loading ? lang.loading : lang.load}\n                <Spinner isActive={loading} />\n              </button>\n              {!!profiles.length && !loading && !winners.length && (\n                <span>\n                  {lang.loaded}\n                  <span className=\"badge badge-pill badge-dark\">{profiles.length}</span>\n                </span>\n              )}\n            </div>\n\n            {!!profiles.length && !loading && (\n              <div className=\"button\">\n                <button className=\"btn btn-danger btn-fix\" onClick={removeAll}>\n                  {lang.clear}\n                </button>\n              </div>\n            )}\n\n            {!loading && profiles.length > 1 && !winners.length && <PickSettings />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nInputForm.propTypes = {\n  input: PropTypes.string.isRequired,\n  profiles: PropTypes.array.isRequired,\n  winners: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  settings: PropTypes.shape({\n    lang: PropTypes.string.isRequired,\n    winnersNum: PropTypes.number.isRequired\n  }),\n  fetchProfilesImages: PropTypes.func.isRequired,\n  handleInput: PropTypes.func.isRequired,\n  removeAll: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    input: state.input,\n    profiles: state.profiles,\n    winners: state.winners,\n    settings: state.settings\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchProfilesImages, handleInput, removeAll }\n)(InputForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { BASE_URL } from \"../../constants\";\n\nconst Profile = props => {\n  const { img, name, removed, removingTime, winner } = props;\n\n  const className = `profile${removed ? \" removed\" : \"\"}${winner ? \" winner\" : \"\"}`;\n  const animationStyle = removed ? `removing ${removingTime}ms ease` : \"\";\n\n  return (\n    <div className={className} style={{ animation: animationStyle }}>\n      <span className=\"tooltiptext\">{name}</span>\n      <a href={`${BASE_URL}/${name}`} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={img} className=\"rounded-circle\" alt={name} />\n      </a>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  img: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  removed: PropTypes.bool.isRequired,\n  removingTime: PropTypes.number.isRequired,\n  winner: PropTypes.bool.isRequired\n};\n\nexport default Profile;\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport Profile from \"./profile\";\nimport Spinner from \"../spinner\";\nimport { calculateRemovingSpeed } from \"../../helpers\";\nimport localization from \"../../lang\";\n\nclass ProfilesList extends PureComponent {\n  render() {\n    const { profiles, winners, removedItems, settings, loading } = this.props;\n\n    //  Defining columns num for grid table based on number of profiles\n    const columnsNum = winners.length ? winners.length : profiles.length > 20 ? 25 : 10;\n\n    //  Calculating remove animation speed based on number of profiles\n    const removeSpeed = calculateRemovingSpeed(profiles.length);\n\n    const lang = localization[settings.lang];\n\n    const winnersText = winners.length ? (\n      <div className=\"winners_text\">\n        <h3>{winners.length === 1 ? lang.winner : lang.winners}</h3>\n      </div>\n    ) : null;\n\n    return loading ? (\n      <div className=\"profiles-container text-center\">\n        <h3>\n          <Spinner isActive={loading} />\n        </h3>\n      </div>\n    ) : (\n      <div className=\"profiles-container\">\n        {winnersText}\n        <div\n          className=\"profiles\"\n          style={{\n            gridTemplateColumns: `repeat(${columnsNum}, minmax(25px, ${\n              winners.length ? \"100\" : \"77\"\n            }px))`\n          }}\n        >\n          {profiles &&\n            profiles.map((profile, id) => (\n              <Profile\n                img={profile.img}\n                name={profile.name}\n                key={profile.name}\n                removed={removedItems.includes(id)}\n                winner={winners.includes(profile.name)}\n                removingTime={removeSpeed}\n              />\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nProfilesList.propTypes = {\n  profiles: PropTypes.array.isRequired,\n  winners: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  removedItems: PropTypes.array.isRequired,\n  settings: PropTypes.shape({\n    lang: PropTypes.string.isRequired,\n    winnersNum: PropTypes.number.isRequired\n  })\n};\n\nconst mapStateToProps = state => {\n  return {\n    profiles: state.profiles,\n    removedItems: state.removedItems,\n    winners: state.winners,\n    settings: state.settings,\n    loading: state.loading\n  };\n};\n\nexport default connect(mapStateToProps)(ProfilesList);\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <h3 className=\"text-center\">\n      <i className=\"fab fa-instagram\" />\n      Instagram Randomizer App\n    </h3>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"text-muted text-center font-sm footer\">\n      <p className=\"small\">\n        {\"made by \"}\n        <a href=\"https://github.com/MikhailKarpov87/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Mihanik87\n        </a>\n      </p>\n      <p className=\"small\">\n        <a\n          href=\"https://github.com/MikhailKarpov87/instagram-randomizer/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport localization from \"../../lang\";\nimport { changeLanguage } from \"../../actions\";\n\nclass LanguageSwitch extends Component {\n  renderFlags() {\n    const { changeLanguage } = this.props;\n\n    return Object.keys(localization).map(value => (\n      <div\n        className=\"language-item\"\n        onClick={() => changeLanguage(value)}\n        key={value}\n        style={{ backgroundImage: `url(/images/${value}-flag.png)` }}\n      />\n    ));\n  }\n\n  render() {\n    return <div className=\"language-switch\">{this.renderFlags()}</div>;\n  }\n}\n\nLanguageSwitch.propTypes = {\n  changeLanguage: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { changeLanguage }\n)(LanguageSwitch);\n","import React from \"react\";\n\nimport InputForm from \"./main_page/input_form\";\nimport ProfilesList from \"./main_page/profiles_list\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport LanguageSwitch from \"./main_page/language_switch\";\n\nconst MainPage = () => {\n  return (\n    <div className=\"container\">\n      <LanguageSwitch />\n      <Header />\n      <InputForm />\n      <ProfilesList />\n      <Footer />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport MainPage from \"./components/main_page\";\n\nconst initialState = {\n  input: \"\",\n  profiles: [],\n  winners: [],\n  removedItems: [],\n  loading: false,\n  picking: false,\n  error: false,\n  settings: {\n    winnersNum: 1,\n    lang: \"ru\"\n  }\n};\n\nconst myStore = composeWithDevTools(applyMiddleware(thunk))(createStore);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={myStore(reducers, initialState)}>\n        <MainPage />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}